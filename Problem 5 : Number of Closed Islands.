 
class Solution {
    public:
    void DFS(vector<vector<int>> &grid, int i, int j, int &cornerCheck){
        if(i < 0 || j < 0 || i >= grid.size() || j >= grid[0].size()){
            cornerCheck = 1;
            return;
        }

        if(grid[i][j] == 1) return;

        grid[i][j] = 1;

        DFS(grid,i+1,j,cornerCheck);
        DFS(grid,i-1,j,cornerCheck);
        DFS(grid,i,j+1,cornerCheck);
        DFS(grid,i,j-1,cornerCheck);
    }

    int closedIsland(vector<vector<int>>& grid) {
        
        int answer = 0;
        for(int i = 0; i < grid.size(); i++){
            for(int j = 0; j < grid[0].size(); j++){
                if(grid[i][j] == 0){
                    int cornerCheck = 0;
                    DFS(grid,i,j,cornerCheck);
                    if(!cornerCheck) 
                        answer++;
                }
            }
        }

        return answer;
    }
};
