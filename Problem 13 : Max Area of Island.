class Solution {
public:
    void dfs(int i,int j, vector<vector<int>> &grid,int &area,vector<vector<int>> & vis){
        if(i<0 || i>=grid.size() || j<0 || j>=grid[0].size() || grid[i][j]==0 || vis[i][j]==1){
            return;
        }
        area++;
        vis[i][j]=1;
        dfs(i-1,j,grid,area,vis);
        dfs(i,j+1,grid,area,vis);
        dfs(i,j-1,grid,area,vis);
        dfs(i+1,j,grid,area,vis);
    }
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int maxArea=0,n=grid.size(),m=grid[0].size();
        vector<vector<int>> vis(n,vector<int>(m,0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]==1 && !vis[i][j])
                {
                    int area=0;
                    dfs(i,j,grid,area,vis);
                    maxArea=max(maxArea,area);
                }
            }
        }
        return maxArea;
    }
};
