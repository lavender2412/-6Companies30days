go through this again a good one. key : priority

class Solution {
public:
    int findMaximizedCapital(int k, int w, vector<int>& profits, vector<int>& capital) {
        int n = profits.size();
        vector<pair<int, int>> answer;
        for (int i = 0; i < n; i++) {
            answer.push_back(make_pair(capital[i], profits[i]));
        }
        sort(answer.begin(), answer.end());
        priority_queue<int> q;
        int ptr=0,i=0;
        while(i<k){
            while (ptr < n && answer[ptr].first <= w) {
                q.push(answer[ptr++].second);
            }
            if (q.empty()) {
                break;
            }
            w += q.top();
            q.pop();
            i++;
        }
        return w;
    }
};
