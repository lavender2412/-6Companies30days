class Solution {
public:

    bool isValid(string &s)
    {
        int n=s.size();
        if(n==1)
            return true;
        if(n>3 or s[0]=='0')
            return false;
        return stoi(s) <= 255;
    }

    vector<string> restoreIpAddresses(string s) {
        vector<string>answer;
        int n =  s.size();
        if(n > 12)
        return answer;
        for(int i=1;i<=3;i++) 
        {
            for(int j=1;j<=3;j++) 
            {
                for(int k=1;k<=3;k++) 
                {
                    if((i+j+k<n) and (i+j+k >= n-3)) // check if last part is of length 3
                    {
                        string s1=s.substr(0,i);
                        string s2=s.substr((i+0),j);
                        string s3=s.substr((j+i),k);
                        string s4=s.substr(i+j+k);
                        if(isValid(s1) && isValid(s2) && isValid(s3) && isValid(s4))
                        answer.push_back(s1+"."+s2+"."+s3+"."+s4);
                    }
                }
            }
        }

        return answer;
    }
};
