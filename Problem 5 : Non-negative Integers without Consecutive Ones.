class Solution {
public:
  /*  int findLength(int n)
    {
        int cnt = 0;
        while(n)
        {
            n = n >> 1;
            cout << n<<"\n";
            cnt++;
        }
        return cnt;
    }
    bool checkSequence(int n)
    {
        int i = 31;
        while(i > 0)
        {
            if(((n & (1<<i)) != 0) && (n & (1<<(i-1))) !=0)
                return false;
            i--;
        }
        return true;
    }
    int findIntegers(int n) {
        int lenSequence = findLength(n);
      //  cout << lenSequence;
        int first = 2, second = 3,ans=0;
        if(lenSequence == 1) return first;
        if(lenSequence == 2) return second;
        for(int i=3;i<=lenSequence;i++)
        {
            ans =  first+second;
            first = second;
            second = ans;
        }
        return ans;
        int count = 0;
        for(int i=0;i<=n;i++)
        {
            if(checkSequence(i))
                count++;
          
        }
        return count;
        
    }
};*/
        int count(int num, int range) {
        if (num > range)  return 0;
        
        if (num & 1 ==1)     return 1 + count((num << 1) | 0, range);
 return 1 + count((num << 1) | 0, range) + count((num << 1) | 1, range);
        
    }
    int findIntegers(int n) {
        return 1 + count(1, n);
    }
};
